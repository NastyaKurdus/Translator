(load "lexer.lisp")

(defun create-format-test (file)
  (let ((buff (lexer file)))
    (format t "~5S ~7S ~15S ~S~%~%" 'Line 'Column 'Symbol 'Type)
    (mapc (lambda (token)
	    (let ((symbol (token-name (second token)))
		  (line (token-row (second token)))
		  (column (token-col (second token)))
		  (type (car token)))
	      (format t "~5S ~7S ~15S ~S~%" line column symbol type)))
	  buff)))

(defun test()
  (format t "True-test1~%")
  (format t "~S~%~%"(create-format-test "True-test1.txt"))
  (format t "True-test2~%")
  (format t "~S~%~%"(create-format-test "True-test2.txt"))
  (format t "True-test3~%")
  (format t "~S~%~%"(create-format-test "True-test3.txt"))
  (format t "False-test1~%")
  (format t "~S~%~%"(create-format-test "False-test1.txt"))
  (format t "False-test2~%")
  (format t "~S~%~%"(create-format-test "False-test2.txt"))
  (format t "False-test3~%")
  (format t "~S~%~%"(create-format-test "False-test3.txt")))
